{"ast":null,"code":"import React,{useRef}from'react';import{useDrag,useDrop}from'react-dnd';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ItemTypes={CARD:'card'};const DnDCard=_ref=>{let{id,index,movie,moveCard,rank}=_ref;const ref=useRef(null);const[{handlerId},drop]=useDrop({accept:ItemTypes.CARD,collect(monitor){return{handlerId:monitor.getHandlerId()};},hover(item,monitor){var _ref$current;if(!ref.current){return;}const dragIndex=item.index;const hoverIndex=index;// Don't replace items with themselves\nif(dragIndex===hoverIndex){return;}// Determine rectangle on screen\nconst hoverBoundingRect=(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.getBoundingClientRect();// Get vertical middle\nconst hoverMiddleY=(hoverBoundingRect.bottom-hoverBoundingRect.top)/2;// Determine mouse position\nconst clientOffset=monitor.getClientOffset();// Get pixels to the top\nconst hoverClientY=clientOffset.y-hoverBoundingRect.top;// Only perform the move when the mouse has crossed half of the items height\n// When dragging downwards, only move when the cursor is below 50%\n// When dragging upwards, only move when the cursor is above 50%\n// Dragging downwards\nif(dragIndex<hoverIndex&&hoverClientY<hoverMiddleY){return;}// Dragging upwards\nif(dragIndex>hoverIndex&&hoverClientY>hoverMiddleY){return;}// Time to actually perform the action\nmoveCard(dragIndex,hoverIndex);// Note: we're mutating the monitor item here!\n// Generally it's better to avoid mutations,\n// but it's good here for the sake of performance\n// to avoid expensive index searches.\nitem.index=hoverIndex;}});const[{isDragging},drag]=useDrag({type:ItemTypes.CARD,item:()=>{return{id,index};},collect:monitor=>({isDragging:monitor.isDragging()})});const opacity=isDragging?0.4:1;drag(drop(ref));return/*#__PURE__*/_jsxs(\"div\",{ref:ref,className:\"favorite-item \".concat(isDragging?'dragging':''),style:{opacity},\"data-handler-id\":handlerId,children:[/*#__PURE__*/_jsx(\"div\",{className:\"favorite-rank\",children:rank}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/custom-poster.jpg\",alt:movie.title,className:\"favorite-poster\",onError:_ref2=>{let{currentTarget}=_ref2;currentTarget.onerror=null;currentTarget.src=\"/images/custom-poster.jpg\";}}),/*#__PURE__*/_jsx(\"div\",{className:\"favorite-title\",children:movie.title})]});};export default DnDCard;","map":{"version":3,"names":["React","useRef","useDrag","useDrop","jsx","_jsx","jsxs","_jsxs","ItemTypes","CARD","DnDCard","_ref","id","index","movie","moveCard","rank","ref","handlerId","drop","accept","collect","monitor","getHandlerId","hover","item","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","opacity","className","concat","style","children","src","alt","title","onError","_ref2","currentTarget","onerror"],"sources":["/Users/tenmoutheshark/Desktop/mern-stack-project-backend-Tenmou-Vi/frontend/src/components/DnDCard.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst ItemTypes = {\n  CARD: 'card'\n};\n\nconst DnDCard = ({ id, index, movie, moveCard, rank }) => {\n  const ref = useRef(null);\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return { id, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0.4 : 1;\n  drag(drop(ref));\n\n  return (\n    <div\n      ref={ref}\n      className={`favorite-item ${isDragging ? 'dragging' : ''}`}\n      style={{ opacity }}\n      data-handler-id={handlerId}\n    >\n      <div className=\"favorite-rank\">{rank}</div>\n      <img\n        src=\"/images/custom-poster.jpg\"\n        alt={movie.title}\n        className=\"favorite-poster\"\n        onError={({ currentTarget }) => {\n          currentTarget.onerror = null;\n          currentTarget.src = \"/images/custom-poster.jpg\";\n        }}\n      />\n      <div className=\"favorite-title\">{movie.title}</div>\n    </div>\n  );\n};\n\nexport default DnDCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}